#---------------------------------------------------------------------------#
# Generated by running `./prepare.sh` under '[root]/src/bootstrap-buck2' dir
# Do not edit by hand.
#
# See README.md for directions on how to update this.
#---------------------------------------------------------------------------#

load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load(
    ":rule_macros.bzl",
    "stdlib_rust_binary",
    "stdlib_rust_library",
    "add_configured_aliases",
)
add_configured_aliases(platform = "bootstrap//platforms:rust_bootstrap_stage0")
add_configured_aliases(platform = "bootstrap//platforms:rust_bootstrap_stage1")

alias(
    name = "alloc",
    actual = ":alloc-0.0.0",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "alloc-0.0.0",
    srcs = [
        "src/alloc/src/alloc.rs",
        "src/alloc/src/borrow.rs",
        "src/alloc/src/boxed.rs",
        "src/alloc/src/boxed/convert.rs",
        "src/alloc/src/boxed/iter.rs",
        "src/alloc/src/boxed/thin.rs",
        "src/alloc/src/bstr.rs",
        "src/alloc/src/collections/binary_heap/mod.rs",
        "src/alloc/src/collections/btree/append.rs",
        "src/alloc/src/collections/btree/borrow.rs",
        "src/alloc/src/collections/btree/borrow/tests.rs",
        "src/alloc/src/collections/btree/dedup_sorted_iter.rs",
        "src/alloc/src/collections/btree/fix.rs",
        "src/alloc/src/collections/btree/map.rs",
        "src/alloc/src/collections/btree/map/entry.rs",
        "src/alloc/src/collections/btree/map/tests.rs",
        "src/alloc/src/collections/btree/mem.rs",
        "src/alloc/src/collections/btree/merge_iter.rs",
        "src/alloc/src/collections/btree/mod.rs",
        "src/alloc/src/collections/btree/navigate.rs",
        "src/alloc/src/collections/btree/node.rs",
        "src/alloc/src/collections/btree/node/tests.rs",
        "src/alloc/src/collections/btree/remove.rs",
        "src/alloc/src/collections/btree/search.rs",
        "src/alloc/src/collections/btree/set.rs",
        "src/alloc/src/collections/btree/set/entry.rs",
        "src/alloc/src/collections/btree/set/tests.rs",
        "src/alloc/src/collections/btree/set_val.rs",
        "src/alloc/src/collections/btree/split.rs",
        "src/alloc/src/collections/linked_list.rs",
        "src/alloc/src/collections/linked_list/tests.rs",
        "src/alloc/src/collections/mod.rs",
        "src/alloc/src/collections/vec_deque/drain.rs",
        "src/alloc/src/collections/vec_deque/into_iter.rs",
        "src/alloc/src/collections/vec_deque/iter.rs",
        "src/alloc/src/collections/vec_deque/iter_mut.rs",
        "src/alloc/src/collections/vec_deque/macros.rs",
        "src/alloc/src/collections/vec_deque/mod.rs",
        "src/alloc/src/collections/vec_deque/spec_extend.rs",
        "src/alloc/src/collections/vec_deque/spec_from_iter.rs",
        "src/alloc/src/collections/vec_deque/tests.rs",
        "src/alloc/src/ffi/c_str.rs",
        "src/alloc/src/ffi/mod.rs",
        "src/alloc/src/fmt.rs",
        "src/alloc/src/lib.miri.rs",
        "src/alloc/src/lib.rs",
        "src/alloc/src/macros.rs",
        "src/alloc/src/raw_vec/mod.rs",
        "src/alloc/src/raw_vec/tests.rs",
        "src/alloc/src/rc.rs",
        "src/alloc/src/slice.rs",
        "src/alloc/src/str.rs",
        "src/alloc/src/string.rs",
        "src/alloc/src/sync.rs",
        "src/alloc/src/task.rs",
        "src/alloc/src/vec/cow.rs",
        "src/alloc/src/vec/drain.rs",
        "src/alloc/src/vec/extract_if.rs",
        "src/alloc/src/vec/in_place_collect.rs",
        "src/alloc/src/vec/in_place_drop.rs",
        "src/alloc/src/vec/into_iter.rs",
        "src/alloc/src/vec/is_zero.rs",
        "src/alloc/src/vec/mod.rs",
        "src/alloc/src/vec/partial_eq.rs",
        "src/alloc/src/vec/set_len_on_drop.rs",
        "src/alloc/src/vec/spec_extend.rs",
        "src/alloc/src/vec/spec_from_elem.rs",
        "src/alloc/src/vec/spec_from_iter.rs",
        "src/alloc/src/vec/spec_from_iter_nested.rs",
        "src/alloc/src/vec/splice.rs",
    ],
    crate = "alloc",
    crate_root = "src/alloc/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":compiler_builtins-0.1.153",
        ":core-0.0.0",
    ],
)

http_archive(
    name = "allocator-api2-0.2.21.crate",
    sha256 = "683d7910e743518b0e34f1186f92494becacb047c7b6bf616c96772180fef923",
    strip_prefix = "allocator-api2-0.2.21",
    urls = ["https://static.crates.io/crates/allocator-api2/0.2.21/download"],
    visibility = [],
)

stdlib_rust_library(
    name = "allocator-api2-0.2.21",
    srcs = [":allocator-api2-0.2.21.crate"],
    crate = "allocator_api2",
    crate_root = "allocator-api2-0.2.21.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "nightly",
    ],
    visibility = [],
    deps = [
        ":alloc-0.0.0",
        ":core-0.0.0",
    ],
)

stdlib_rust_library(
    name = "alloctests-0.0.0",
    srcs = [
        "src/alloctests/benches/binary_heap.rs",
        "src/alloctests/benches/btree/map.rs",
        "src/alloctests/benches/btree/mod.rs",
        "src/alloctests/benches/btree/set.rs",
        "src/alloctests/benches/lib.rs",
        "src/alloctests/benches/linked_list.rs",
        "src/alloctests/benches/slice.rs",
        "src/alloctests/benches/str.rs",
        "src/alloctests/benches/string.rs",
        "src/alloctests/benches/vec.rs",
        "src/alloctests/benches/vec_deque.rs",
        "src/alloctests/benches/vec_deque_append.rs",
        "src/alloctests/lib.rs",
        "src/alloctests/testing/crash_test.rs",
        "src/alloctests/testing/mod.rs",
        "src/alloctests/testing/ord_chaos.rs",
        "src/alloctests/testing/rng.rs",
        "src/alloctests/tests/alloc_test.rs",
        "src/alloctests/tests/arc.rs",
        "src/alloctests/tests/autotraits.rs",
        "src/alloctests/tests/borrow.rs",
        "src/alloctests/tests/boxed.rs",
        "src/alloctests/tests/btree_set_hash.rs",
        "src/alloctests/tests/c_str.rs",
        "src/alloctests/tests/c_str2.rs",
        "src/alloctests/tests/collections/binary_heap.rs",
        "src/alloctests/tests/collections/mod.rs",
        "src/alloctests/tests/const_fns.rs",
        "src/alloctests/tests/cow_str.rs",
        "src/alloctests/tests/fmt.rs",
        "src/alloctests/tests/heap.rs",
        "src/alloctests/tests/lib.rs",
        "src/alloctests/tests/linked_list.rs",
        "src/alloctests/tests/misc_tests.rs",
        "src/alloctests/tests/num.rs",
        "src/alloctests/tests/rc.rs",
        "src/alloctests/tests/slice.rs",
        "src/alloctests/tests/sort/ffi_types.rs",
        "src/alloctests/tests/sort/known_good_stable_sort.rs",
        "src/alloctests/tests/sort/mod.rs",
        "src/alloctests/tests/sort/patterns.rs",
        "src/alloctests/tests/sort/tests.rs",
        "src/alloctests/tests/sort/zipf.rs",
        "src/alloctests/tests/str.rs",
        "src/alloctests/tests/string.rs",
        "src/alloctests/tests/sync.rs",
        "src/alloctests/tests/task.rs",
        "src/alloctests/tests/testing/crash_test.rs",
        "src/alloctests/tests/testing/mod.rs",
        "src/alloctests/tests/thin_box.rs",
        "src/alloctests/tests/vec.rs",
        "src/alloctests/tests/vec_deque.rs",
        "src/alloctests/tests/vec_deque_alloc_error.rs",
    ],
    crate = "alloctests",
    crate_root = "src/alloctests/lib.rs",
    edition = "2021",
    visibility = [],
)

alias(
    name = "cfg-if",
    actual = ":cfg-if-1.0.0",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "cfg-if-1.0.0.crate",
    sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
    strip_prefix = "cfg-if-1.0.0",
    urls = ["https://static.crates.io/crates/cfg-if/1.0.0/download"],
    visibility = [],
)

stdlib_rust_library(
    name = "cfg-if-1.0.0",
    srcs = [":cfg-if-1.0.0.crate"],
    crate = "cfg_if",
    crate_root = "cfg-if-1.0.0.crate/src/lib.rs",
    edition = "2018",
    features = [
        "compiler_builtins",
        "core",
        "rustc-dep-of-std",
    ],
    named_deps = {
        "core": ":rustc-std-workspace-core-1.99.0",
    },
    visibility = [],
    deps = [":compiler_builtins-0.1.153"],
)

alias(
    name = "compiler_builtins",
    actual = ":compiler_builtins-0.1.153",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "compiler_builtins-0.1.153.crate",
    sha256 = "926ef6a360c15a911023352fd6969c51605d70495406f735beb1ca0257448e59",
    strip_prefix = "compiler_builtins-0.1.153",
    urls = ["https://static.crates.io/crates/compiler_builtins/0.1.153/download"],
    visibility = [],
)

stdlib_rust_library(
    name = "compiler_builtins-0.1.153",
    srcs = [":compiler_builtins-0.1.153.crate"],
    crate = "compiler_builtins",
    crate_root = "compiler_builtins-0.1.153.crate/src/lib.rs",
    edition = "2021",
    features = [
        "compiler-builtins",
        "core",
        "default",
        "rustc-dep-of-std",
    ],
    named_deps = {
        "core": ":rustc-std-workspace-core-1.99.0",
    },
    visibility = [],
)

alias(
    name = "core",
    actual = ":core-0.0.0",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "core-0.0.0",
    srcs = [
        "src/core/src/alloc/global.rs",
        "src/core/src/alloc/layout.rs",
        "src/core/src/alloc/mod.rs",
        "src/core/src/any.rs",
        "src/core/src/arch.rs",
        "src/core/src/array/ascii.rs",
        "src/core/src/array/drain.rs",
        "src/core/src/array/equality.rs",
        "src/core/src/array/iter.rs",
        "src/core/src/array/iter/iter_inner.rs",
        "src/core/src/array/mod.rs",
        "src/core/src/ascii.rs",
        "src/core/src/ascii/ascii_char.rs",
        "src/core/src/asserting.rs",
        "src/core/src/async_iter/async_iter.rs",
        "src/core/src/async_iter/from_iter.rs",
        "src/core/src/async_iter/mod.rs",
        "src/core/src/bool.rs",
        "src/core/src/borrow.rs",
        "src/core/src/bstr/mod.rs",
        "src/core/src/bstr/traits.rs",
        "src/core/src/cell.rs",
        "src/core/src/cell/lazy.rs",
        "src/core/src/cell/once.rs",
        "src/core/src/char/convert.rs",
        "src/core/src/char/decode.rs",
        "src/core/src/char/methods.rs",
        "src/core/src/char/mod.rs",
        "src/core/src/clone.rs",
        "src/core/src/clone/uninit.rs",
        "src/core/src/cmp.rs",
        "src/core/src/cmp/bytewise.rs",
        "src/core/src/contracts.rs",
        "src/core/src/convert/mod.rs",
        "src/core/src/convert/num.rs",
        "src/core/src/default.rs",
        "src/core/src/error.md",
        "src/core/src/error.rs",
        "src/core/src/escape.rs",
        "src/core/src/ffi/c_char.md",
        "src/core/src/ffi/c_double.md",
        "src/core/src/ffi/c_float.md",
        "src/core/src/ffi/c_int.md",
        "src/core/src/ffi/c_long.md",
        "src/core/src/ffi/c_longlong.md",
        "src/core/src/ffi/c_schar.md",
        "src/core/src/ffi/c_short.md",
        "src/core/src/ffi/c_str.rs",
        "src/core/src/ffi/c_uchar.md",
        "src/core/src/ffi/c_uint.md",
        "src/core/src/ffi/c_ulong.md",
        "src/core/src/ffi/c_ulonglong.md",
        "src/core/src/ffi/c_ushort.md",
        "src/core/src/ffi/c_void.md",
        "src/core/src/ffi/mod.rs",
        "src/core/src/ffi/primitives.rs",
        "src/core/src/ffi/va_list.rs",
        "src/core/src/fmt/builders.rs",
        "src/core/src/fmt/float.rs",
        "src/core/src/fmt/fmt_trait_method_doc.md",
        "src/core/src/fmt/mod.rs",
        "src/core/src/fmt/nofloat.rs",
        "src/core/src/fmt/num.rs",
        "src/core/src/fmt/rt.rs",
        "src/core/src/future/async_drop.rs",
        "src/core/src/future/future.rs",
        "src/core/src/future/into_future.rs",
        "src/core/src/future/join.rs",
        "src/core/src/future/mod.rs",
        "src/core/src/future/pending.rs",
        "src/core/src/future/poll_fn.rs",
        "src/core/src/future/ready.rs",
        "src/core/src/hash/mod.rs",
        "src/core/src/hash/sip.rs",
        "src/core/src/hint.rs",
        "src/core/src/internal_macros.rs",
        "src/core/src/intrinsics/fallback.rs",
        "src/core/src/intrinsics/mir.rs",
        "src/core/src/intrinsics/mod.rs",
        "src/core/src/intrinsics/simd.rs",
        "src/core/src/io/borrowed_buf.rs",
        "src/core/src/io/mod.rs",
        "src/core/src/iter/adapters/array_chunks.rs",
        "src/core/src/iter/adapters/by_ref_sized.rs",
        "src/core/src/iter/adapters/chain.rs",
        "src/core/src/iter/adapters/cloned.rs",
        "src/core/src/iter/adapters/copied.rs",
        "src/core/src/iter/adapters/cycle.rs",
        "src/core/src/iter/adapters/enumerate.rs",
        "src/core/src/iter/adapters/filter.rs",
        "src/core/src/iter/adapters/filter_map.rs",
        "src/core/src/iter/adapters/flatten.rs",
        "src/core/src/iter/adapters/fuse.rs",
        "src/core/src/iter/adapters/inspect.rs",
        "src/core/src/iter/adapters/intersperse.rs",
        "src/core/src/iter/adapters/map.rs",
        "src/core/src/iter/adapters/map_while.rs",
        "src/core/src/iter/adapters/map_windows.rs",
        "src/core/src/iter/adapters/mod.rs",
        "src/core/src/iter/adapters/peekable.rs",
        "src/core/src/iter/adapters/rev.rs",
        "src/core/src/iter/adapters/scan.rs",
        "src/core/src/iter/adapters/skip.rs",
        "src/core/src/iter/adapters/skip_while.rs",
        "src/core/src/iter/adapters/step_by.rs",
        "src/core/src/iter/adapters/take.rs",
        "src/core/src/iter/adapters/take_while.rs",
        "src/core/src/iter/adapters/zip.rs",
        "src/core/src/iter/mod.rs",
        "src/core/src/iter/range.rs",
        "src/core/src/iter/sources.rs",
        "src/core/src/iter/sources/empty.rs",
        "src/core/src/iter/sources/from_coroutine.rs",
        "src/core/src/iter/sources/from_fn.rs",
        "src/core/src/iter/sources/once.rs",
        "src/core/src/iter/sources/once_with.rs",
        "src/core/src/iter/sources/repeat.rs",
        "src/core/src/iter/sources/repeat_n.rs",
        "src/core/src/iter/sources/repeat_with.rs",
        "src/core/src/iter/sources/successors.rs",
        "src/core/src/iter/traits/accum.rs",
        "src/core/src/iter/traits/collect.rs",
        "src/core/src/iter/traits/double_ended.rs",
        "src/core/src/iter/traits/exact_size.rs",
        "src/core/src/iter/traits/iterator.rs",
        "src/core/src/iter/traits/marker.rs",
        "src/core/src/iter/traits/mod.rs",
        "src/core/src/iter/traits/unchecked_iterator.rs",
        "src/core/src/lib.miri.rs",
        "src/core/src/lib.rs",
        "src/core/src/macros/mod.rs",
        "src/core/src/macros/panic.md",
        "src/core/src/marker.rs",
        "src/core/src/marker/variance.rs",
        "src/core/src/mem/manually_drop.rs",
        "src/core/src/mem/maybe_uninit.rs",
        "src/core/src/mem/mod.rs",
        "src/core/src/mem/transmutability.rs",
        "src/core/src/net/display_buffer.rs",
        "src/core/src/net/ip_addr.rs",
        "src/core/src/net/mod.rs",
        "src/core/src/net/parser.rs",
        "src/core/src/net/socket_addr.rs",
        "src/core/src/num/bignum.rs",
        "src/core/src/num/dec2flt/common.rs",
        "src/core/src/num/dec2flt/decimal.rs",
        "src/core/src/num/dec2flt/decimal_seq.rs",
        "src/core/src/num/dec2flt/float.rs",
        "src/core/src/num/dec2flt/fpu.rs",
        "src/core/src/num/dec2flt/lemire.rs",
        "src/core/src/num/dec2flt/mod.rs",
        "src/core/src/num/dec2flt/parse.rs",
        "src/core/src/num/dec2flt/slow.rs",
        "src/core/src/num/dec2flt/table.rs",
        "src/core/src/num/diy_float.rs",
        "src/core/src/num/error.rs",
        "src/core/src/num/f128.rs",
        "src/core/src/num/f16.rs",
        "src/core/src/num/f32.rs",
        "src/core/src/num/f64.rs",
        "src/core/src/num/flt2dec/decoder.rs",
        "src/core/src/num/flt2dec/estimator.rs",
        "src/core/src/num/flt2dec/mod.rs",
        "src/core/src/num/flt2dec/strategy/dragon.rs",
        "src/core/src/num/flt2dec/strategy/grisu.rs",
        "src/core/src/num/fmt.rs",
        "src/core/src/num/int_log10.rs",
        "src/core/src/num/int_macros.rs",
        "src/core/src/num/int_sqrt.rs",
        "src/core/src/num/mod.rs",
        "src/core/src/num/niche_types.rs",
        "src/core/src/num/nonzero.rs",
        "src/core/src/num/overflow_panic.rs",
        "src/core/src/num/saturating.rs",
        "src/core/src/num/shells/i128.rs",
        "src/core/src/num/shells/i16.rs",
        "src/core/src/num/shells/i32.rs",
        "src/core/src/num/shells/i64.rs",
        "src/core/src/num/shells/i8.rs",
        "src/core/src/num/shells/int_macros.rs",
        "src/core/src/num/shells/isize.rs",
        "src/core/src/num/shells/u128.rs",
        "src/core/src/num/shells/u16.rs",
        "src/core/src/num/shells/u32.rs",
        "src/core/src/num/shells/u64.rs",
        "src/core/src/num/shells/u8.rs",
        "src/core/src/num/shells/usize.rs",
        "src/core/src/num/uint_macros.rs",
        "src/core/src/num/wrapping.rs",
        "src/core/src/ops/arith.rs",
        "src/core/src/ops/async_function.rs",
        "src/core/src/ops/bit.rs",
        "src/core/src/ops/control_flow.rs",
        "src/core/src/ops/coroutine.rs",
        "src/core/src/ops/deref.rs",
        "src/core/src/ops/drop.rs",
        "src/core/src/ops/function.rs",
        "src/core/src/ops/index.rs",
        "src/core/src/ops/index_range.rs",
        "src/core/src/ops/mod.rs",
        "src/core/src/ops/range.rs",
        "src/core/src/ops/try_trait.rs",
        "src/core/src/ops/unsize.rs",
        "src/core/src/option.rs",
        "src/core/src/panic.rs",
        "src/core/src/panic/location.rs",
        "src/core/src/panic/panic_info.rs",
        "src/core/src/panic/unwind_safe.rs",
        "src/core/src/panicking.rs",
        "src/core/src/pat.rs",
        "src/core/src/pin.rs",
        "src/core/src/pin/unsafe_pinned.rs",
        "src/core/src/prelude/mod.rs",
        "src/core/src/prelude/v1.rs",
        "src/core/src/primitive.rs",
        "src/core/src/primitive_docs.rs",
        "src/core/src/ptr/alignment.rs",
        "src/core/src/ptr/const_ptr.rs",
        "src/core/src/ptr/metadata.rs",
        "src/core/src/ptr/mod.rs",
        "src/core/src/ptr/mut_ptr.rs",
        "src/core/src/ptr/non_null.rs",
        "src/core/src/ptr/unique.rs",
        "src/core/src/random.rs",
        "src/core/src/range.rs",
        "src/core/src/range/iter.rs",
        "src/core/src/range/legacy.rs",
        "src/core/src/result.rs",
        "src/core/src/slice/ascii.rs",
        "src/core/src/slice/cmp.rs",
        "src/core/src/slice/index.rs",
        "src/core/src/slice/iter.rs",
        "src/core/src/slice/iter/macros.rs",
        "src/core/src/slice/memchr.rs",
        "src/core/src/slice/mod.rs",
        "src/core/src/slice/raw.rs",
        "src/core/src/slice/rotate.rs",
        "src/core/src/slice/sort/mod.rs",
        "src/core/src/slice/sort/select.rs",
        "src/core/src/slice/sort/shared/mod.rs",
        "src/core/src/slice/sort/shared/pivot.rs",
        "src/core/src/slice/sort/shared/smallsort.rs",
        "src/core/src/slice/sort/stable/drift.rs",
        "src/core/src/slice/sort/stable/merge.rs",
        "src/core/src/slice/sort/stable/mod.rs",
        "src/core/src/slice/sort/stable/quicksort.rs",
        "src/core/src/slice/sort/stable/tiny.rs",
        "src/core/src/slice/sort/unstable/heapsort.rs",
        "src/core/src/slice/sort/unstable/mod.rs",
        "src/core/src/slice/sort/unstable/quicksort.rs",
        "src/core/src/slice/specialize.rs",
        "src/core/src/str/converts.rs",
        "src/core/src/str/count.rs",
        "src/core/src/str/error.rs",
        "src/core/src/str/iter.rs",
        "src/core/src/str/lossy.rs",
        "src/core/src/str/mod.rs",
        "src/core/src/str/pattern.rs",
        "src/core/src/str/traits.rs",
        "src/core/src/str/validations.rs",
        "src/core/src/sync/atomic.rs",
        "src/core/src/sync/exclusive.rs",
        "src/core/src/sync/mod.rs",
        "src/core/src/task/mod.rs",
        "src/core/src/task/poll.rs",
        "src/core/src/task/ready.rs",
        "src/core/src/task/wake.rs",
        "src/core/src/time.rs",
        "src/core/src/tuple.rs",
        "src/core/src/ub_checks.rs",
        "src/core/src/unicode/mod.rs",
        "src/core/src/unicode/printable.rs",
        "src/core/src/unicode/unicode_data.rs",
        "src/core/src/unit.rs",
        "src/core/src/unsafe_binder.rs",
        "src/portable-simd/crates/core_simd/examples/dot_product.rs",
        "src/portable-simd/crates/core_simd/examples/matrix_inversion.rs",
        "src/portable-simd/crates/core_simd/examples/nbody.rs",
        "src/portable-simd/crates/core_simd/examples/spectral_norm.rs",
        "src/portable-simd/crates/core_simd/src/alias.rs",
        "src/portable-simd/crates/core_simd/src/cast.rs",
        "src/portable-simd/crates/core_simd/src/core_simd_docs.md",
        "src/portable-simd/crates/core_simd/src/fmt.rs",
        "src/portable-simd/crates/core_simd/src/iter.rs",
        "src/portable-simd/crates/core_simd/src/lane_count.rs",
        "src/portable-simd/crates/core_simd/src/lib.rs",
        "src/portable-simd/crates/core_simd/src/masks.rs",
        "src/portable-simd/crates/core_simd/src/masks/bitmask.rs",
        "src/portable-simd/crates/core_simd/src/masks/full_masks.rs",
        "src/portable-simd/crates/core_simd/src/mod.rs",
        "src/portable-simd/crates/core_simd/src/ops.rs",
        "src/portable-simd/crates/core_simd/src/ops/assign.rs",
        "src/portable-simd/crates/core_simd/src/ops/deref.rs",
        "src/portable-simd/crates/core_simd/src/ops/shift_scalar.rs",
        "src/portable-simd/crates/core_simd/src/ops/unary.rs",
        "src/portable-simd/crates/core_simd/src/select.rs",
        "src/portable-simd/crates/core_simd/src/simd/cmp.rs",
        "src/portable-simd/crates/core_simd/src/simd/cmp/eq.rs",
        "src/portable-simd/crates/core_simd/src/simd/cmp/ord.rs",
        "src/portable-simd/crates/core_simd/src/simd/num.rs",
        "src/portable-simd/crates/core_simd/src/simd/num/float.rs",
        "src/portable-simd/crates/core_simd/src/simd/num/int.rs",
        "src/portable-simd/crates/core_simd/src/simd/num/uint.rs",
        "src/portable-simd/crates/core_simd/src/simd/prelude.rs",
        "src/portable-simd/crates/core_simd/src/simd/ptr.rs",
        "src/portable-simd/crates/core_simd/src/simd/ptr/const_ptr.rs",
        "src/portable-simd/crates/core_simd/src/simd/ptr/mut_ptr.rs",
        "src/portable-simd/crates/core_simd/src/swizzle.rs",
        "src/portable-simd/crates/core_simd/src/swizzle_dyn.rs",
        "src/portable-simd/crates/core_simd/src/to_bytes.rs",
        "src/portable-simd/crates/core_simd/src/vector.rs",
        "src/portable-simd/crates/core_simd/src/vendor.rs",
        "src/portable-simd/crates/core_simd/src/vendor/arm.rs",
        "src/portable-simd/crates/core_simd/src/vendor/loongarch64.rs",
        "src/portable-simd/crates/core_simd/src/vendor/powerpc.rs",
        "src/portable-simd/crates/core_simd/src/vendor/wasm32.rs",
        "src/portable-simd/crates/core_simd/src/vendor/x86.rs",
        "src/portable-simd/crates/core_simd/tests/autoderef.rs",
        "src/portable-simd/crates/core_simd/tests/cast.rs",
        "src/portable-simd/crates/core_simd/tests/f32_ops.rs",
        "src/portable-simd/crates/core_simd/tests/f64_ops.rs",
        "src/portable-simd/crates/core_simd/tests/i16_ops.rs",
        "src/portable-simd/crates/core_simd/tests/i32_ops.rs",
        "src/portable-simd/crates/core_simd/tests/i64_ops.rs",
        "src/portable-simd/crates/core_simd/tests/i8_ops.rs",
        "src/portable-simd/crates/core_simd/tests/isize_ops.rs",
        "src/portable-simd/crates/core_simd/tests/layout.rs",
        "src/portable-simd/crates/core_simd/tests/mask_ops.rs",
        "src/portable-simd/crates/core_simd/tests/mask_ops_impl/mask16.rs",
        "src/portable-simd/crates/core_simd/tests/mask_ops_impl/mask32.rs",
        "src/portable-simd/crates/core_simd/tests/mask_ops_impl/mask64.rs",
        "src/portable-simd/crates/core_simd/tests/mask_ops_impl/mask8.rs",
        "src/portable-simd/crates/core_simd/tests/mask_ops_impl/mask_macros.rs",
        "src/portable-simd/crates/core_simd/tests/mask_ops_impl/masksize.rs",
        "src/portable-simd/crates/core_simd/tests/mask_ops_impl/mod.rs",
        "src/portable-simd/crates/core_simd/tests/masked_load_store.rs",
        "src/portable-simd/crates/core_simd/tests/masks.rs",
        "src/portable-simd/crates/core_simd/tests/ops_macros.rs",
        "src/portable-simd/crates/core_simd/tests/pointers.rs",
        "src/portable-simd/crates/core_simd/tests/round.rs",
        "src/portable-simd/crates/core_simd/tests/swizzle.rs",
        "src/portable-simd/crates/core_simd/tests/swizzle_dyn.rs",
        "src/portable-simd/crates/core_simd/tests/to_bytes.rs",
        "src/portable-simd/crates/core_simd/tests/try_from_slice.rs",
        "src/portable-simd/crates/core_simd/tests/u16_ops.rs",
        "src/portable-simd/crates/core_simd/tests/u32_ops.rs",
        "src/portable-simd/crates/core_simd/tests/u64_ops.rs",
        "src/portable-simd/crates/core_simd/tests/u8_ops.rs",
        "src/portable-simd/crates/core_simd/tests/usize_ops.rs",
        "src/stdarch/crates/core_arch/src/aarch64/mod.rs",
        "src/stdarch/crates/core_arch/src/aarch64/mte.rs",
        "src/stdarch/crates/core_arch/src/aarch64/neon/generated.rs",
        "src/stdarch/crates/core_arch/src/aarch64/neon/mod.rs",
        "src/stdarch/crates/core_arch/src/aarch64/prefetch.rs",
        "src/stdarch/crates/core_arch/src/aarch64/test_support.rs",
        "src/stdarch/crates/core_arch/src/aarch64/tme.rs",
        "src/stdarch/crates/core_arch/src/arm/dsp.rs",
        "src/stdarch/crates/core_arch/src/arm/mod.rs",
        "src/stdarch/crates/core_arch/src/arm/neon.rs",
        "src/stdarch/crates/core_arch/src/arm/sat.rs",
        "src/stdarch/crates/core_arch/src/arm/simd32.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/barrier/common.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/barrier/cp15.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/barrier/mod.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/barrier/not_mclass.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/barrier/v8.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/hints.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/mod.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/neon/generated.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/neon/load_tests.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/neon/mod.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/neon/shift_and_insert_tests.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/neon/store_tests.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/neon/table_lookup_tests.rs",
        "src/stdarch/crates/core_arch/src/arm_shared/test_support.rs",
        "src/stdarch/crates/core_arch/src/core_arch_docs.md",
        "src/stdarch/crates/core_arch/src/lib.rs",
        "src/stdarch/crates/core_arch/src/loongarch64/lasx/generated.rs",
        "src/stdarch/crates/core_arch/src/loongarch64/lasx/mod.rs",
        "src/stdarch/crates/core_arch/src/loongarch64/lasx/tests.rs",
        "src/stdarch/crates/core_arch/src/loongarch64/lasx/types.rs",
        "src/stdarch/crates/core_arch/src/loongarch64/lsx/generated.rs",
        "src/stdarch/crates/core_arch/src/loongarch64/lsx/mod.rs",
        "src/stdarch/crates/core_arch/src/loongarch64/lsx/tests.rs",
        "src/stdarch/crates/core_arch/src/loongarch64/lsx/types.rs",
        "src/stdarch/crates/core_arch/src/loongarch64/mod.rs",
        "src/stdarch/crates/core_arch/src/macros.rs",
        "src/stdarch/crates/core_arch/src/mips/mod.rs",
        "src/stdarch/crates/core_arch/src/mips/msa.rs",
        "src/stdarch/crates/core_arch/src/mod.rs",
        "src/stdarch/crates/core_arch/src/nvptx/mod.rs",
        "src/stdarch/crates/core_arch/src/nvptx/packed.rs",
        "src/stdarch/crates/core_arch/src/powerpc/altivec.rs",
        "src/stdarch/crates/core_arch/src/powerpc/macros.rs",
        "src/stdarch/crates/core_arch/src/powerpc/mod.rs",
        "src/stdarch/crates/core_arch/src/powerpc/vsx.rs",
        "src/stdarch/crates/core_arch/src/powerpc64/mod.rs",
        "src/stdarch/crates/core_arch/src/powerpc64/vsx.rs",
        "src/stdarch/crates/core_arch/src/riscv32/mod.rs",
        "src/stdarch/crates/core_arch/src/riscv32/zk.rs",
        "src/stdarch/crates/core_arch/src/riscv64/mod.rs",
        "src/stdarch/crates/core_arch/src/riscv64/zk.rs",
        "src/stdarch/crates/core_arch/src/riscv_shared/mod.rs",
        "src/stdarch/crates/core_arch/src/riscv_shared/p.rs",
        "src/stdarch/crates/core_arch/src/riscv_shared/zb.rs",
        "src/stdarch/crates/core_arch/src/riscv_shared/zk.rs",
        "src/stdarch/crates/core_arch/src/s390x/macros.rs",
        "src/stdarch/crates/core_arch/src/s390x/mod.rs",
        "src/stdarch/crates/core_arch/src/s390x/vector.rs",
        "src/stdarch/crates/core_arch/src/simd.rs",
        "src/stdarch/crates/core_arch/src/wasm32/atomic.rs",
        "src/stdarch/crates/core_arch/src/wasm32/memory.rs",
        "src/stdarch/crates/core_arch/src/wasm32/mod.rs",
        "src/stdarch/crates/core_arch/src/wasm32/relaxed_simd.rs",
        "src/stdarch/crates/core_arch/src/wasm32/simd128.rs",
        "src/stdarch/crates/core_arch/src/x86/abm.rs",
        "src/stdarch/crates/core_arch/src/x86/adx.rs",
        "src/stdarch/crates/core_arch/src/x86/aes.rs",
        "src/stdarch/crates/core_arch/src/x86/avx.rs",
        "src/stdarch/crates/core_arch/src/x86/avx2.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512bf16.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512bw.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512cd.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512dq.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512f.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512fp16.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512ifma.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512vnni.rs",
        "src/stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
        "src/stdarch/crates/core_arch/src/x86/avxneconvert.rs",
        "src/stdarch/crates/core_arch/src/x86/bmi1.rs",
        "src/stdarch/crates/core_arch/src/x86/bmi2.rs",
        "src/stdarch/crates/core_arch/src/x86/bswap.rs",
        "src/stdarch/crates/core_arch/src/x86/bt.rs",
        "src/stdarch/crates/core_arch/src/x86/cpuid.rs",
        "src/stdarch/crates/core_arch/src/x86/eflags.rs",
        "src/stdarch/crates/core_arch/src/x86/f16c.rs",
        "src/stdarch/crates/core_arch/src/x86/fma.rs",
        "src/stdarch/crates/core_arch/src/x86/fxsr.rs",
        "src/stdarch/crates/core_arch/src/x86/gfni.rs",
        "src/stdarch/crates/core_arch/src/x86/kl.rs",
        "src/stdarch/crates/core_arch/src/x86/macros.rs",
        "src/stdarch/crates/core_arch/src/x86/mod.rs",
        "src/stdarch/crates/core_arch/src/x86/pclmulqdq.rs",
        "src/stdarch/crates/core_arch/src/x86/rdrand.rs",
        "src/stdarch/crates/core_arch/src/x86/rdtsc.rs",
        "src/stdarch/crates/core_arch/src/x86/rtm.rs",
        "src/stdarch/crates/core_arch/src/x86/sha.rs",
        "src/stdarch/crates/core_arch/src/x86/sse.rs",
        "src/stdarch/crates/core_arch/src/x86/sse2.rs",
        "src/stdarch/crates/core_arch/src/x86/sse3.rs",
        "src/stdarch/crates/core_arch/src/x86/sse41.rs",
        "src/stdarch/crates/core_arch/src/x86/sse42.rs",
        "src/stdarch/crates/core_arch/src/x86/sse4a.rs",
        "src/stdarch/crates/core_arch/src/x86/ssse3.rs",
        "src/stdarch/crates/core_arch/src/x86/tbm.rs",
        "src/stdarch/crates/core_arch/src/x86/test.rs",
        "src/stdarch/crates/core_arch/src/x86/vaes.rs",
        "src/stdarch/crates/core_arch/src/x86/vpclmulqdq.rs",
        "src/stdarch/crates/core_arch/src/x86/xsave.rs",
        "src/stdarch/crates/core_arch/src/x86_64/abm.rs",
        "src/stdarch/crates/core_arch/src/x86_64/adx.rs",
        "src/stdarch/crates/core_arch/src/x86_64/amx.rs",
        "src/stdarch/crates/core_arch/src/x86_64/avx.rs",
        "src/stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
        "src/stdarch/crates/core_arch/src/x86_64/avx512f.rs",
        "src/stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
        "src/stdarch/crates/core_arch/src/x86_64/bmi.rs",
        "src/stdarch/crates/core_arch/src/x86_64/bmi2.rs",
        "src/stdarch/crates/core_arch/src/x86_64/bswap.rs",
        "src/stdarch/crates/core_arch/src/x86_64/bt.rs",
        "src/stdarch/crates/core_arch/src/x86_64/cmpxchg16b.rs",
        "src/stdarch/crates/core_arch/src/x86_64/fxsr.rs",
        "src/stdarch/crates/core_arch/src/x86_64/macros.rs",
        "src/stdarch/crates/core_arch/src/x86_64/mod.rs",
        "src/stdarch/crates/core_arch/src/x86_64/rdrand.rs",
        "src/stdarch/crates/core_arch/src/x86_64/sse.rs",
        "src/stdarch/crates/core_arch/src/x86_64/sse2.rs",
        "src/stdarch/crates/core_arch/src/x86_64/sse41.rs",
        "src/stdarch/crates/core_arch/src/x86_64/sse42.rs",
        "src/stdarch/crates/core_arch/src/x86_64/tbm.rs",
        "src/stdarch/crates/core_arch/src/x86_64/xsave.rs",
    ],
    crate = "core",
    crate_root = "src/core/src/lib.rs",
    edition = "2024",
    visibility = [],
)

stdlib_rust_library(
    name = "coretests-0.0.0",
    srcs = [
        "src/coretests/benches/any.rs",
        "src/coretests/benches/array.rs",
        "src/coretests/benches/ascii.rs",
        "src/coretests/benches/ascii/is_ascii.rs",
        "src/coretests/benches/char/methods.rs",
        "src/coretests/benches/char/mod.rs",
        "src/coretests/benches/fmt.rs",
        "src/coretests/benches/hash/mod.rs",
        "src/coretests/benches/hash/sip.rs",
        "src/coretests/benches/iter.rs",
        "src/coretests/benches/lib.rs",
        "src/coretests/benches/net/addr_parser.rs",
        "src/coretests/benches/net/mod.rs",
        "src/coretests/benches/num/dec2flt/mod.rs",
        "src/coretests/benches/num/flt2dec/mod.rs",
        "src/coretests/benches/num/flt2dec/strategy/dragon.rs",
        "src/coretests/benches/num/flt2dec/strategy/grisu.rs",
        "src/coretests/benches/num/int_log/mod.rs",
        "src/coretests/benches/num/int_pow/mod.rs",
        "src/coretests/benches/num/int_sqrt/mod.rs",
        "src/coretests/benches/num/mod.rs",
        "src/coretests/benches/ops.rs",
        "src/coretests/benches/pattern.rs",
        "src/coretests/benches/slice.rs",
        "src/coretests/benches/str.rs",
        "src/coretests/benches/str/char_count.rs",
        "src/coretests/benches/str/corpora.rs",
        "src/coretests/benches/str/debug.rs",
        "src/coretests/benches/str/iter.rs",
        "src/coretests/benches/tuple.rs",
        "src/coretests/lib.rs",
        "src/coretests/tests/alloc.rs",
        "src/coretests/tests/any.rs",
        "src/coretests/tests/array.rs",
        "src/coretests/tests/ascii.rs",
        "src/coretests/tests/ascii_char.rs",
        "src/coretests/tests/asserting.rs",
        "src/coretests/tests/async_iter/mod.rs",
        "src/coretests/tests/atomic.rs",
        "src/coretests/tests/bool.rs",
        "src/coretests/tests/bstr.rs",
        "src/coretests/tests/cell.rs",
        "src/coretests/tests/char.rs",
        "src/coretests/tests/clone.rs",
        "src/coretests/tests/cmp.rs",
        "src/coretests/tests/const_ptr.rs",
        "src/coretests/tests/convert.rs",
        "src/coretests/tests/error.rs",
        "src/coretests/tests/ffi.rs",
        "src/coretests/tests/ffi/cstr.rs",
        "src/coretests/tests/fmt/builders.rs",
        "src/coretests/tests/fmt/float.rs",
        "src/coretests/tests/fmt/mod.rs",
        "src/coretests/tests/fmt/num.rs",
        "src/coretests/tests/future.rs",
        "src/coretests/tests/hash/mod.rs",
        "src/coretests/tests/hash/sip.rs",
        "src/coretests/tests/intrinsics.rs",
        "src/coretests/tests/io/borrowed_buf.rs",
        "src/coretests/tests/io/mod.rs",
        "src/coretests/tests/iter/adapters/array_chunks.rs",
        "src/coretests/tests/iter/adapters/by_ref_sized.rs",
        "src/coretests/tests/iter/adapters/chain.rs",
        "src/coretests/tests/iter/adapters/cloned.rs",
        "src/coretests/tests/iter/adapters/copied.rs",
        "src/coretests/tests/iter/adapters/cycle.rs",
        "src/coretests/tests/iter/adapters/enumerate.rs",
        "src/coretests/tests/iter/adapters/filter.rs",
        "src/coretests/tests/iter/adapters/filter_map.rs",
        "src/coretests/tests/iter/adapters/flat_map.rs",
        "src/coretests/tests/iter/adapters/flatten.rs",
        "src/coretests/tests/iter/adapters/fuse.rs",
        "src/coretests/tests/iter/adapters/inspect.rs",
        "src/coretests/tests/iter/adapters/intersperse.rs",
        "src/coretests/tests/iter/adapters/map.rs",
        "src/coretests/tests/iter/adapters/map_windows.rs",
        "src/coretests/tests/iter/adapters/mod.rs",
        "src/coretests/tests/iter/adapters/peekable.rs",
        "src/coretests/tests/iter/adapters/scan.rs",
        "src/coretests/tests/iter/adapters/skip.rs",
        "src/coretests/tests/iter/adapters/skip_while.rs",
        "src/coretests/tests/iter/adapters/step_by.rs",
        "src/coretests/tests/iter/adapters/take.rs",
        "src/coretests/tests/iter/adapters/take_while.rs",
        "src/coretests/tests/iter/adapters/zip.rs",
        "src/coretests/tests/iter/mod.rs",
        "src/coretests/tests/iter/range.rs",
        "src/coretests/tests/iter/sources.rs",
        "src/coretests/tests/iter/traits/accum.rs",
        "src/coretests/tests/iter/traits/double_ended.rs",
        "src/coretests/tests/iter/traits/iterator.rs",
        "src/coretests/tests/iter/traits/mod.rs",
        "src/coretests/tests/iter/traits/step.rs",
        "src/coretests/tests/lazy.rs",
        "src/coretests/tests/lib.rs",
        "src/coretests/tests/macros.rs",
        "src/coretests/tests/manually_drop.rs",
        "src/coretests/tests/mem.rs",
        "src/coretests/tests/net/ip_addr.rs",
        "src/coretests/tests/net/mod.rs",
        "src/coretests/tests/net/parser.rs",
        "src/coretests/tests/net/socket_addr.rs",
        "src/coretests/tests/nonzero.rs",
        "src/coretests/tests/num/bignum.rs",
        "src/coretests/tests/num/const_from.rs",
        "src/coretests/tests/num/dec2flt/decimal.rs",
        "src/coretests/tests/num/dec2flt/decimal_seq.rs",
        "src/coretests/tests/num/dec2flt/float.rs",
        "src/coretests/tests/num/dec2flt/lemire.rs",
        "src/coretests/tests/num/dec2flt/mod.rs",
        "src/coretests/tests/num/dec2flt/parse.rs",
        "src/coretests/tests/num/float_iter_sum_identity.rs",
        "src/coretests/tests/num/flt2dec/estimator.rs",
        "src/coretests/tests/num/flt2dec/mod.rs",
        "src/coretests/tests/num/flt2dec/random.rs",
        "src/coretests/tests/num/flt2dec/strategy/dragon.rs",
        "src/coretests/tests/num/flt2dec/strategy/grisu.rs",
        "src/coretests/tests/num/i128.rs",
        "src/coretests/tests/num/i16.rs",
        "src/coretests/tests/num/i32.rs",
        "src/coretests/tests/num/i64.rs",
        "src/coretests/tests/num/i8.rs",
        "src/coretests/tests/num/ieee754.rs",
        "src/coretests/tests/num/int_log.rs",
        "src/coretests/tests/num/int_macros.rs",
        "src/coretests/tests/num/int_sqrt.rs",
        "src/coretests/tests/num/midpoint.rs",
        "src/coretests/tests/num/mod.rs",
        "src/coretests/tests/num/nan.rs",
        "src/coretests/tests/num/ops.rs",
        "src/coretests/tests/num/u128.rs",
        "src/coretests/tests/num/u16.rs",
        "src/coretests/tests/num/u32.rs",
        "src/coretests/tests/num/u64.rs",
        "src/coretests/tests/num/u8.rs",
        "src/coretests/tests/num/uint_macros.rs",
        "src/coretests/tests/num/wrapping.rs",
        "src/coretests/tests/ops.rs",
        "src/coretests/tests/ops/control_flow.rs",
        "src/coretests/tests/ops/from_residual.rs",
        "src/coretests/tests/option.rs",
        "src/coretests/tests/panic.rs",
        "src/coretests/tests/panic/location.rs",
        "src/coretests/tests/pattern.rs",
        "src/coretests/tests/pin.rs",
        "src/coretests/tests/pin_macro.rs",
        "src/coretests/tests/ptr.rs",
        "src/coretests/tests/result.rs",
        "src/coretests/tests/simd.rs",
        "src/coretests/tests/slice.rs",
        "src/coretests/tests/str.rs",
        "src/coretests/tests/str_lossy.rs",
        "src/coretests/tests/task.rs",
        "src/coretests/tests/time.rs",
        "src/coretests/tests/tuple.rs",
        "src/coretests/tests/unicode.rs",
        "src/coretests/tests/waker.rs",
    ],
    crate = "coretests",
    crate_root = "src/coretests/lib.rs",
    edition = "2024",
    visibility = [],
)

alias(
    name = "getopts",
    actual = ":getopts-0.2.21",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "getopts-0.2.21.crate",
    sha256 = "14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5",
    strip_prefix = "getopts-0.2.21",
    urls = ["https://static.crates.io/crates/getopts/0.2.21/download"],
    visibility = [],
)

stdlib_rust_library(
    name = "getopts-0.2.21",
    srcs = [":getopts-0.2.21.crate"],
    crate = "getopts",
    crate_root = "getopts-0.2.21.crate/src/lib.rs",
    edition = "2015",
    features = [
        "core",
        "rustc-dep-of-std",
        "std",
    ],
    named_deps = {
        "core": ":rustc-std-workspace-core-1.99.0",
        "std": ":rustc-std-workspace-std-1.99.0",
    },
    visibility = [],
    deps = [":unicode-width-0.1.14"],
)

alias(
    name = "hashbrown",
    actual = ":hashbrown-0.15.2",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "hashbrown-0.15.2.crate",
    sha256 = "bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289",
    strip_prefix = "hashbrown-0.15.2",
    urls = ["https://static.crates.io/crates/hashbrown/0.15.2/download"],
    visibility = [],
)

stdlib_rust_library(
    name = "hashbrown-0.15.2",
    srcs = [":hashbrown-0.15.2.crate"],
    crate = "hashbrown",
    crate_root = "hashbrown-0.15.2.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "compiler_builtins",
        "core",
        "nightly",
        "raw-entry",
        "rustc-dep-of-std",
        "rustc-internal-api",
    ],
    named_deps = {
        "alloc": ":rustc-std-workspace-alloc-1.99.0",
        "core": ":rustc-std-workspace-core-1.99.0",
    },
    visibility = [],
    deps = [
        ":allocator-api2-0.2.21",
        ":compiler_builtins-0.1.153",
    ],
)

alias(
    name = "libc",
    actual = ":libc-0.2.171",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "libc-0.2.171.crate",
    sha256 = "c19937216e9d3aa9956d9bb8dfc0b0c8beb6058fc4f7a4dc4d850edf86a237d6",
    strip_prefix = "libc-0.2.171",
    urls = ["https://static.crates.io/crates/libc/0.2.171/download"],
    visibility = [],
)

stdlib_rust_library(
    name = "libc-0.2.171",
    srcs = [":libc-0.2.171.crate"],
    crate = "libc",
    crate_root = "libc-0.2.171.crate/src/lib.rs",
    edition = "2021",
    features = [
        "align",
        "rustc-dep-of-std",
        "rustc-std-workspace-core",
    ],
    rustc_flags = ["@$(location :libc-0.2.171-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":rustc-std-workspace-core-1.99.0"],
)

stdlib_rust_binary(
    name = "libc-0.2.171-build-script-build",
    srcs = [":libc-0.2.171.crate"],
    crate = "build_script_build",
    crate_root = "libc-0.2.171.crate/build.rs",
    edition = "2021",
    features = [
        "align",
        "rustc-dep-of-std",
        "rustc-std-workspace-core",
    ],
    visibility = [],
)

buildscript_run(
    name = "libc-0.2.171-build-script-run",
    package_name = "libc",
    buildscript_rule = ":libc-0.2.171-build-script-build",
    features = [
        "align",
        "rustc-dep-of-std",
        "rustc-std-workspace-core",
    ],
    version = "0.2.171",
)

alias(
    name = "panic_abort",
    actual = ":panic_abort-0.0.0",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "panic_abort-0.0.0",
    srcs = [
        "src/panic_abort/src/android.rs",
        "src/panic_abort/src/lib.rs",
        "src/panic_abort/src/zkvm.rs",
    ],
    crate = "panic_abort",
    crate_root = "src/panic_abort/src/lib.rs",
    edition = "2024",
    platform = {
        "linux-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "linux-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "windows-gnu": dict(
            deps = [":libc-0.2.171"],
        ),
    },
    visibility = [],
    deps = [
        ":alloc-0.0.0",
        ":cfg-if-1.0.0",
        ":compiler_builtins-0.1.153",
        ":core-0.0.0",
    ],
)

alias(
    name = "panic_unwind",
    actual = ":panic_unwind-0.0.0",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "panic_unwind-0.0.0",
    srcs = [
        "src/panic_unwind/src/dummy.rs",
        "src/panic_unwind/src/emcc.rs",
        "src/panic_unwind/src/gcc.rs",
        "src/panic_unwind/src/hermit.rs",
        "src/panic_unwind/src/lib.rs",
        "src/panic_unwind/src/miri.rs",
        "src/panic_unwind/src/seh.rs",
    ],
    crate = "panic_unwind",
    crate_root = "src/panic_unwind/src/lib.rs",
    edition = "2024",
    platform = {
        "linux-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "linux-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "windows-gnu": dict(
            deps = [":libc-0.2.171"],
        ),
    },
    visibility = [],
    deps = [
        ":alloc-0.0.0",
        ":cfg-if-1.0.0",
        ":compiler_builtins-0.1.153",
        ":core-0.0.0",
        ":unwind-0.0.0",
    ],
)

alias(
    name = "proc_macro",
    actual = ":proc_macro-0.0.0",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "proc_macro-0.0.0",
    srcs = [
        "src/proc_macro/src/bridge/arena.rs",
        "src/proc_macro/src/bridge/buffer.rs",
        "src/proc_macro/src/bridge/client.rs",
        "src/proc_macro/src/bridge/closure.rs",
        "src/proc_macro/src/bridge/fxhash.rs",
        "src/proc_macro/src/bridge/handle.rs",
        "src/proc_macro/src/bridge/mod.rs",
        "src/proc_macro/src/bridge/rpc.rs",
        "src/proc_macro/src/bridge/selfless_reify.rs",
        "src/proc_macro/src/bridge/server.rs",
        "src/proc_macro/src/bridge/symbol.rs",
        "src/proc_macro/src/diagnostic.rs",
        "src/proc_macro/src/escape.rs",
        "src/proc_macro/src/lib.rs",
        "src/proc_macro/src/quote.rs",
        "src/proc_macro/src/to_tokens.rs",
    ],
    crate = "proc_macro",
    crate_root = "src/proc_macro/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":core-0.0.0",
        ":rustc-literal-escaper-0.0.2",
        ":std-0.0.0",
    ],
)

stdlib_rust_library(
    name = "profiler_builtins-0.0.0",
    srcs = ["src/profiler_builtins/src/lib.rs"],
    crate = "profiler_builtins",
    crate_root = "src/profiler_builtins/src/lib.rs",
    edition = "2024",
    visibility = [],
)

alias(
    name = "rustc-demangle",
    actual = ":rustc-demangle-0.1.24",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "rustc-demangle-0.1.24.crate",
    sha256 = "719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f",
    strip_prefix = "rustc-demangle-0.1.24",
    urls = ["https://static.crates.io/crates/rustc-demangle/0.1.24/download"],
    visibility = [],
)

stdlib_rust_library(
    name = "rustc-demangle-0.1.24",
    srcs = [":rustc-demangle-0.1.24.crate"],
    crate = "rustc_demangle",
    crate_root = "rustc-demangle-0.1.24.crate/src/lib.rs",
    edition = "2015",
    features = [
        "compiler_builtins",
        "core",
        "rustc-dep-of-std",
    ],
    named_deps = {
        "core": ":rustc-std-workspace-core-1.99.0",
    },
    visibility = [],
    deps = [":compiler_builtins-0.1.153"],
)

alias(
    name = "rustc-literal-escaper",
    actual = ":rustc-literal-escaper-0.0.2",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "rustc-literal-escaper-0.0.2.crate",
    sha256 = "0041b6238913c41fe704213a4a9329e2f685a156d1781998128b4149c230ad04",
    strip_prefix = "rustc-literal-escaper-0.0.2",
    urls = ["https://static.crates.io/crates/rustc-literal-escaper/0.0.2/download"],
    visibility = [],
)

stdlib_rust_library(
    name = "rustc-literal-escaper-0.0.2",
    srcs = [":rustc-literal-escaper-0.0.2.crate"],
    crate = "rustc_literal_escaper",
    crate_root = "rustc-literal-escaper-0.0.2.crate/src/lib.rs",
    edition = "2021",
    features = ["rustc-dep-of-std"],
    named_deps = {
        "std": ":rustc-std-workspace-std-1.99.0",
    },
    visibility = [],
)

stdlib_rust_library(
    name = "rustc-std-workspace-alloc-1.99.0",
    srcs = ["src/rustc-std-workspace-alloc/lib.rs"],
    crate = "rustc_std_workspace_alloc",
    crate_root = "src/rustc-std-workspace-alloc/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [":alloc-0.0.0"],
)

stdlib_rust_library(
    name = "rustc-std-workspace-core-1.99.0",
    srcs = ["src/rustc-std-workspace-core/lib.rs"],
    crate = "rustc_std_workspace_core",
    crate_root = "src/rustc-std-workspace-core/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [":core-0.0.0"],
)

stdlib_rust_library(
    name = "rustc-std-workspace-std-1.99.0",
    srcs = ["src/rustc-std-workspace-std/lib.rs"],
    crate = "rustc_std_workspace_std",
    crate_root = "src/rustc-std-workspace-std/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [":std-0.0.0"],
)

alias(
    name = "std",
    actual = ":std-0.0.0",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "std-0.0.0",
    srcs = [
        "src/backtrace/src/backtrace/libunwind.rs",
        "src/backtrace/src/backtrace/miri.rs",
        "src/backtrace/src/backtrace/mod.rs",
        "src/backtrace/src/backtrace/noop.rs",
        "src/backtrace/src/backtrace/win32.rs",
        "src/backtrace/src/backtrace/win64.rs",
        "src/backtrace/src/capture.rs",
        "src/backtrace/src/dbghelp.rs",
        "src/backtrace/src/lib.rs",
        "src/backtrace/src/print.rs",
        "src/backtrace/src/print/fuchsia.rs",
        "src/backtrace/src/symbolize/dbghelp.rs",
        "src/backtrace/src/symbolize/gimli.rs",
        "src/backtrace/src/symbolize/gimli/coff.rs",
        "src/backtrace/src/symbolize/gimli/elf.rs",
        "src/backtrace/src/symbolize/gimli/libs_aix.rs",
        "src/backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
        "src/backtrace/src/symbolize/gimli/libs_haiku.rs",
        "src/backtrace/src/symbolize/gimli/libs_illumos.rs",
        "src/backtrace/src/symbolize/gimli/libs_libnx.rs",
        "src/backtrace/src/symbolize/gimli/libs_macos.rs",
        "src/backtrace/src/symbolize/gimli/libs_windows.rs",
        "src/backtrace/src/symbolize/gimli/lru.rs",
        "src/backtrace/src/symbolize/gimli/macho.rs",
        "src/backtrace/src/symbolize/gimli/mmap_fake.rs",
        "src/backtrace/src/symbolize/gimli/mmap_unix.rs",
        "src/backtrace/src/symbolize/gimli/mmap_windows.rs",
        "src/backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs",
        "src/backtrace/src/symbolize/gimli/stash.rs",
        "src/backtrace/src/symbolize/gimli/xcoff.rs",
        "src/backtrace/src/symbolize/miri.rs",
        "src/backtrace/src/symbolize/mod.rs",
        "src/backtrace/src/symbolize/noop.rs",
        "src/backtrace/src/types.rs",
        "src/backtrace/src/windows_sys.rs",
        "src/backtrace/src/windows_sys_arm32_shim.rs",
        "src/core/src/error.md",
        "src/core/src/ffi/c_char.md",
        "src/core/src/ffi/c_double.md",
        "src/core/src/ffi/c_float.md",
        "src/core/src/ffi/c_int.md",
        "src/core/src/ffi/c_long.md",
        "src/core/src/ffi/c_longlong.md",
        "src/core/src/ffi/c_schar.md",
        "src/core/src/ffi/c_short.md",
        "src/core/src/ffi/c_uchar.md",
        "src/core/src/ffi/c_uint.md",
        "src/core/src/ffi/c_ulong.md",
        "src/core/src/ffi/c_ulonglong.md",
        "src/core/src/ffi/c_ushort.md",
        "src/core/src/ffi/c_void.md",
        "src/core/src/macros/panic.md",
        "src/core/src/primitive_docs.rs",
        "src/portable-simd/crates/core_simd/src/core_simd_docs.md",
        "src/portable-simd/crates/std_float/src/lib.rs",
        "src/portable-simd/crates/std_float/tests/float.rs",
        "src/std/src/alloc.rs",
        "src/std/src/ascii.rs",
        "src/std/src/backtrace.rs",
        "src/std/src/backtrace/tests.rs",
        "src/std/src/bstr.rs",
        "src/std/src/collections/hash/map.rs",
        "src/std/src/collections/hash/map/tests.rs",
        "src/std/src/collections/hash/mod.rs",
        "src/std/src/collections/hash/set.rs",
        "src/std/src/collections/hash/set/tests.rs",
        "src/std/src/collections/mod.rs",
        "src/std/src/env.rs",
        "src/std/src/error.rs",
        "src/std/src/f128.rs",
        "src/std/src/f16.rs",
        "src/std/src/f32.rs",
        "src/std/src/f64.rs",
        "src/std/src/ffi/c_str.rs",
        "src/std/src/ffi/mod.rs",
        "src/std/src/ffi/os_str.rs",
        "src/std/src/ffi/os_str/tests.rs",
        "src/std/src/fs.rs",
        "src/std/src/fs/tests.rs",
        "src/std/src/hash/mod.rs",
        "src/std/src/hash/random.rs",
        "src/std/src/io/buffered/bufreader.rs",
        "src/std/src/io/buffered/bufreader/buffer.rs",
        "src/std/src/io/buffered/bufwriter.rs",
        "src/std/src/io/buffered/linewriter.rs",
        "src/std/src/io/buffered/linewritershim.rs",
        "src/std/src/io/buffered/mod.rs",
        "src/std/src/io/buffered/tests.rs",
        "src/std/src/io/copy.rs",
        "src/std/src/io/copy/tests.rs",
        "src/std/src/io/cursor.rs",
        "src/std/src/io/cursor/tests.rs",
        "src/std/src/io/error.rs",
        "src/std/src/io/error/repr_bitpacked.rs",
        "src/std/src/io/error/repr_unpacked.rs",
        "src/std/src/io/error/tests.rs",
        "src/std/src/io/impls.rs",
        "src/std/src/io/impls/tests.rs",
        "src/std/src/io/mod.rs",
        "src/std/src/io/pipe.rs",
        "src/std/src/io/pipe/tests.rs",
        "src/std/src/io/prelude.rs",
        "src/std/src/io/stdio.rs",
        "src/std/src/io/stdio/tests.rs",
        "src/std/src/io/tests.rs",
        "src/std/src/io/util.rs",
        "src/std/src/io/util/tests.rs",
        "src/std/src/keyword_docs.rs",
        "src/std/src/lib.miri.rs",
        "src/std/src/lib.rs",
        "src/std/src/macros.rs",
        "src/std/src/net/ip_addr.rs",
        "src/std/src/net/ip_addr/tests.rs",
        "src/std/src/net/mod.rs",
        "src/std/src/net/socket_addr.rs",
        "src/std/src/net/socket_addr/tests.rs",
        "src/std/src/net/tcp.rs",
        "src/std/src/net/tcp/tests.rs",
        "src/std/src/net/test.rs",
        "src/std/src/net/udp.rs",
        "src/std/src/net/udp/tests.rs",
        "src/std/src/num.rs",
        "src/std/src/os/aix/fs.rs",
        "src/std/src/os/aix/mod.rs",
        "src/std/src/os/aix/raw.rs",
        "src/std/src/os/android/fs.rs",
        "src/std/src/os/android/mod.rs",
        "src/std/src/os/android/net.rs",
        "src/std/src/os/android/raw.rs",
        "src/std/src/os/cygwin/fs.rs",
        "src/std/src/os/cygwin/mod.rs",
        "src/std/src/os/cygwin/raw.rs",
        "src/std/src/os/darwin/fs.rs",
        "src/std/src/os/darwin/mod.rs",
        "src/std/src/os/darwin/raw.rs",
        "src/std/src/os/dragonfly/fs.rs",
        "src/std/src/os/dragonfly/mod.rs",
        "src/std/src/os/dragonfly/raw.rs",
        "src/std/src/os/emscripten/fs.rs",
        "src/std/src/os/emscripten/mod.rs",
        "src/std/src/os/emscripten/raw.rs",
        "src/std/src/os/espidf/fs.rs",
        "src/std/src/os/espidf/mod.rs",
        "src/std/src/os/espidf/raw.rs",
        "src/std/src/os/fd/mod.rs",
        "src/std/src/os/fd/net.rs",
        "src/std/src/os/fd/owned.rs",
        "src/std/src/os/fd/raw.rs",
        "src/std/src/os/fd/tests.rs",
        "src/std/src/os/fortanix_sgx/arch.rs",
        "src/std/src/os/fortanix_sgx/ffi.rs",
        "src/std/src/os/fortanix_sgx/io.rs",
        "src/std/src/os/fortanix_sgx/mod.rs",
        "src/std/src/os/freebsd/fs.rs",
        "src/std/src/os/freebsd/mod.rs",
        "src/std/src/os/freebsd/net.rs",
        "src/std/src/os/freebsd/raw.rs",
        "src/std/src/os/fuchsia/fs.rs",
        "src/std/src/os/fuchsia/mod.rs",
        "src/std/src/os/fuchsia/raw.rs",
        "src/std/src/os/haiku/fs.rs",
        "src/std/src/os/haiku/mod.rs",
        "src/std/src/os/haiku/raw.rs",
        "src/std/src/os/hermit/ffi.rs",
        "src/std/src/os/hermit/io/mod.rs",
        "src/std/src/os/hermit/io/net.rs",
        "src/std/src/os/hermit/mod.rs",
        "src/std/src/os/horizon/fs.rs",
        "src/std/src/os/horizon/mod.rs",
        "src/std/src/os/horizon/raw.rs",
        "src/std/src/os/hurd/fs.rs",
        "src/std/src/os/hurd/mod.rs",
        "src/std/src/os/hurd/raw.rs",
        "src/std/src/os/illumos/fs.rs",
        "src/std/src/os/illumos/mod.rs",
        "src/std/src/os/illumos/raw.rs",
        "src/std/src/os/ios/mod.rs",
        "src/std/src/os/l4re/fs.rs",
        "src/std/src/os/l4re/mod.rs",
        "src/std/src/os/l4re/raw.rs",
        "src/std/src/os/linux/fs.rs",
        "src/std/src/os/linux/mod.rs",
        "src/std/src/os/linux/net.rs",
        "src/std/src/os/linux/process.rs",
        "src/std/src/os/linux/raw.rs",
        "src/std/src/os/macos/mod.rs",
        "src/std/src/os/mod.rs",
        "src/std/src/os/net/linux_ext/addr.rs",
        "src/std/src/os/net/linux_ext/mod.rs",
        "src/std/src/os/net/linux_ext/socket.rs",
        "src/std/src/os/net/linux_ext/tcp.rs",
        "src/std/src/os/net/linux_ext/tests.rs",
        "src/std/src/os/net/mod.rs",
        "src/std/src/os/netbsd/fs.rs",
        "src/std/src/os/netbsd/mod.rs",
        "src/std/src/os/netbsd/net.rs",
        "src/std/src/os/netbsd/raw.rs",
        "src/std/src/os/nto/fs.rs",
        "src/std/src/os/nto/mod.rs",
        "src/std/src/os/nto/raw.rs",
        "src/std/src/os/nuttx/fs.rs",
        "src/std/src/os/nuttx/mod.rs",
        "src/std/src/os/nuttx/raw.rs",
        "src/std/src/os/openbsd/fs.rs",
        "src/std/src/os/openbsd/mod.rs",
        "src/std/src/os/openbsd/raw.rs",
        "src/std/src/os/raw/mod.rs",
        "src/std/src/os/raw/tests.rs",
        "src/std/src/os/redox/fs.rs",
        "src/std/src/os/redox/mod.rs",
        "src/std/src/os/redox/raw.rs",
        "src/std/src/os/rtems/fs.rs",
        "src/std/src/os/rtems/mod.rs",
        "src/std/src/os/rtems/raw.rs",
        "src/std/src/os/solaris/fs.rs",
        "src/std/src/os/solaris/mod.rs",
        "src/std/src/os/solaris/raw.rs",
        "src/std/src/os/solid/ffi.rs",
        "src/std/src/os/solid/io.rs",
        "src/std/src/os/solid/mod.rs",
        "src/std/src/os/trusty/io/mod.rs",
        "src/std/src/os/trusty/mod.rs",
        "src/std/src/os/uefi/env.rs",
        "src/std/src/os/uefi/mod.rs",
        "src/std/src/os/unix/ffi/mod.rs",
        "src/std/src/os/unix/ffi/os_str.rs",
        "src/std/src/os/unix/fs.rs",
        "src/std/src/os/unix/fs/tests.rs",
        "src/std/src/os/unix/io/mod.rs",
        "src/std/src/os/unix/io/tests.rs",
        "src/std/src/os/unix/mod.rs",
        "src/std/src/os/unix/net/addr.rs",
        "src/std/src/os/unix/net/ancillary.rs",
        "src/std/src/os/unix/net/datagram.rs",
        "src/std/src/os/unix/net/listener.rs",
        "src/std/src/os/unix/net/mod.rs",
        "src/std/src/os/unix/net/stream.rs",
        "src/std/src/os/unix/net/tests.rs",
        "src/std/src/os/unix/net/ucred.rs",
        "src/std/src/os/unix/net/ucred/tests.rs",
        "src/std/src/os/unix/process.rs",
        "src/std/src/os/unix/raw.rs",
        "src/std/src/os/unix/thread.rs",
        "src/std/src/os/vita/fs.rs",
        "src/std/src/os/vita/mod.rs",
        "src/std/src/os/vita/raw.rs",
        "src/std/src/os/vxworks/fs.rs",
        "src/std/src/os/vxworks/mod.rs",
        "src/std/src/os/vxworks/raw.rs",
        "src/std/src/os/wasi/ffi.rs",
        "src/std/src/os/wasi/fs.rs",
        "src/std/src/os/wasi/io/mod.rs",
        "src/std/src/os/wasi/io/tests.rs",
        "src/std/src/os/wasi/mod.rs",
        "src/std/src/os/wasi/net/mod.rs",
        "src/std/src/os/wasip2/mod.rs",
        "src/std/src/os/windows/ffi.rs",
        "src/std/src/os/windows/fs.rs",
        "src/std/src/os/windows/io/handle.rs",
        "src/std/src/os/windows/io/mod.rs",
        "src/std/src/os/windows/io/raw.rs",
        "src/std/src/os/windows/io/socket.rs",
        "src/std/src/os/windows/io/tests.rs",
        "src/std/src/os/windows/mod.rs",
        "src/std/src/os/windows/process.rs",
        "src/std/src/os/windows/raw.rs",
        "src/std/src/os/windows/thread.rs",
        "src/std/src/os/xous/ffi.rs",
        "src/std/src/os/xous/ffi/definitions.rs",
        "src/std/src/os/xous/ffi/definitions/memoryflags.rs",
        "src/std/src/os/xous/mod.rs",
        "src/std/src/os/xous/services.rs",
        "src/std/src/os/xous/services/dns.rs",
        "src/std/src/os/xous/services/log.rs",
        "src/std/src/os/xous/services/net.rs",
        "src/std/src/os/xous/services/systime.rs",
        "src/std/src/os/xous/services/ticktimer.rs",
        "src/std/src/panic.rs",
        "src/std/src/panicking.rs",
        "src/std/src/pat.rs",
        "src/std/src/path.rs",
        "src/std/src/prelude/mod.rs",
        "src/std/src/prelude/v1.rs",
        "src/std/src/process.rs",
        "src/std/src/process/tests.rs",
        "src/std/src/random.rs",
        "src/std/src/rt.rs",
        "src/std/src/sync/barrier.rs",
        "src/std/src/sync/lazy_lock.rs",
        "src/std/src/sync/mod.rs",
        "src/std/src/sync/mpmc/array.rs",
        "src/std/src/sync/mpmc/context.rs",
        "src/std/src/sync/mpmc/counter.rs",
        "src/std/src/sync/mpmc/error.rs",
        "src/std/src/sync/mpmc/list.rs",
        "src/std/src/sync/mpmc/mod.rs",
        "src/std/src/sync/mpmc/select.rs",
        "src/std/src/sync/mpmc/tests.rs",
        "src/std/src/sync/mpmc/utils.rs",
        "src/std/src/sync/mpmc/waker.rs",
        "src/std/src/sync/mpmc/zero.rs",
        "src/std/src/sync/mpsc.rs",
        "src/std/src/sync/once_lock.rs",
        "src/std/src/sync/poison.rs",
        "src/std/src/sync/poison/condvar.rs",
        "src/std/src/sync/poison/mutex.rs",
        "src/std/src/sync/poison/once.rs",
        "src/std/src/sync/poison/rwlock.rs",
        "src/std/src/sync/reentrant_lock.rs",
        "src/std/src/sys/alloc/hermit.rs",
        "src/std/src/sys/alloc/mod.rs",
        "src/std/src/sys/alloc/sgx.rs",
        "src/std/src/sys/alloc/solid.rs",
        "src/std/src/sys/alloc/uefi.rs",
        "src/std/src/sys/alloc/unix.rs",
        "src/std/src/sys/alloc/wasm.rs",
        "src/std/src/sys/alloc/windows.rs",
        "src/std/src/sys/alloc/windows/tests.rs",
        "src/std/src/sys/alloc/xous.rs",
        "src/std/src/sys/alloc/zkvm.rs",
        "src/std/src/sys/anonymous_pipe/mod.rs",
        "src/std/src/sys/anonymous_pipe/unix.rs",
        "src/std/src/sys/anonymous_pipe/unsupported.rs",
        "src/std/src/sys/anonymous_pipe/windows.rs",
        "src/std/src/sys/args/common.rs",
        "src/std/src/sys/args/hermit.rs",
        "src/std/src/sys/args/mod.rs",
        "src/std/src/sys/args/sgx.rs",
        "src/std/src/sys/args/uefi.rs",
        "src/std/src/sys/args/unix.rs",
        "src/std/src/sys/args/unsupported.rs",
        "src/std/src/sys/args/wasi.rs",
        "src/std/src/sys/args/windows.rs",
        "src/std/src/sys/args/windows/tests.rs",
        "src/std/src/sys/args/xous.rs",
        "src/std/src/sys/args/zkvm.rs",
        "src/std/src/sys/backtrace.rs",
        "src/std/src/sys/cmath.rs",
        "src/std/src/sys/exit_guard.rs",
        "src/std/src/sys/fd/hermit.rs",
        "src/std/src/sys/fd/mod.rs",
        "src/std/src/sys/fd/sgx.rs",
        "src/std/src/sys/fd/unix.rs",
        "src/std/src/sys/fd/unix/tests.rs",
        "src/std/src/sys/fd/wasi.rs",
        "src/std/src/sys/fs/common.rs",
        "src/std/src/sys/fs/hermit.rs",
        "src/std/src/sys/fs/mod.rs",
        "src/std/src/sys/fs/solid.rs",
        "src/std/src/sys/fs/uefi.rs",
        "src/std/src/sys/fs/unix.rs",
        "src/std/src/sys/fs/unix/tests.rs",
        "src/std/src/sys/fs/unsupported.rs",
        "src/std/src/sys/fs/wasi.rs",
        "src/std/src/sys/fs/windows.rs",
        "src/std/src/sys/fs/windows/remove_dir_all.rs",
        "src/std/src/sys/io/io_slice/iovec.rs",
        "src/std/src/sys/io/io_slice/unsupported.rs",
        "src/std/src/sys/io/io_slice/wasi.rs",
        "src/std/src/sys/io/io_slice/windows.rs",
        "src/std/src/sys/io/is_terminal/hermit.rs",
        "src/std/src/sys/io/is_terminal/isatty.rs",
        "src/std/src/sys/io/is_terminal/unsupported.rs",
        "src/std/src/sys/io/is_terminal/windows.rs",
        "src/std/src/sys/io/mod.rs",
        "src/std/src/sys/mod.rs",
        "src/std/src/sys/net/connection/sgx.rs",
        "src/std/src/sys/net/connection/socket.rs",
        "src/std/src/sys/net/connection/socket/hermit.rs",
        "src/std/src/sys/net/connection/socket/solid.rs",
        "src/std/src/sys/net/connection/socket/tests.rs",
        "src/std/src/sys/net/connection/socket/unix.rs",
        "src/std/src/sys/net/connection/socket/wasip2.rs",
        "src/std/src/sys/net/connection/socket/windows.rs",
        "src/std/src/sys/net/connection/uefi/mod.rs",
        "src/std/src/sys/net/connection/unsupported.rs",
        "src/std/src/sys/net/connection/wasip1.rs",
        "src/std/src/sys/net/connection/xous/dns.rs",
        "src/std/src/sys/net/connection/xous/mod.rs",
        "src/std/src/sys/net/connection/xous/tcplistener.rs",
        "src/std/src/sys/net/connection/xous/tcpstream.rs",
        "src/std/src/sys/net/connection/xous/udp.rs",
        "src/std/src/sys/net/mod.rs",
        "src/std/src/sys/os_str/bytes.rs",
        "src/std/src/sys/os_str/bytes/tests.rs",
        "src/std/src/sys/os_str/mod.rs",
        "src/std/src/sys/os_str/wtf8.rs",
        "src/std/src/sys/pal/common/mod.rs",
        "src/std/src/sys/pal/common/small_c_string.rs",
        "src/std/src/sys/pal/common/tests.rs",
        "src/std/src/sys/pal/hermit/env.rs",
        "src/std/src/sys/pal/hermit/futex.rs",
        "src/std/src/sys/pal/hermit/mod.rs",
        "src/std/src/sys/pal/hermit/os.rs",
        "src/std/src/sys/pal/hermit/thread.rs",
        "src/std/src/sys/pal/hermit/time.rs",
        "src/std/src/sys/pal/itron/abi.rs",
        "src/std/src/sys/pal/itron/error.rs",
        "src/std/src/sys/pal/itron/spin.rs",
        "src/std/src/sys/pal/itron/task.rs",
        "src/std/src/sys/pal/itron/thread.rs",
        "src/std/src/sys/pal/itron/thread_parking.rs",
        "src/std/src/sys/pal/itron/time.rs",
        "src/std/src/sys/pal/itron/time/tests.rs",
        "src/std/src/sys/pal/mod.rs",
        "src/std/src/sys/pal/sgx/abi/mem.rs",
        "src/std/src/sys/pal/sgx/abi/mod.rs",
        "src/std/src/sys/pal/sgx/abi/panic.rs",
        "src/std/src/sys/pal/sgx/abi/reloc.rs",
        "src/std/src/sys/pal/sgx/abi/thread.rs",
        "src/std/src/sys/pal/sgx/abi/tls/mod.rs",
        "src/std/src/sys/pal/sgx/abi/tls/sync_bitset.rs",
        "src/std/src/sys/pal/sgx/abi/tls/sync_bitset/tests.rs",
        "src/std/src/sys/pal/sgx/abi/usercalls/alloc.rs",
        "src/std/src/sys/pal/sgx/abi/usercalls/mod.rs",
        "src/std/src/sys/pal/sgx/abi/usercalls/raw.rs",
        "src/std/src/sys/pal/sgx/abi/usercalls/tests.rs",
        "src/std/src/sys/pal/sgx/env.rs",
        "src/std/src/sys/pal/sgx/libunwind_integration.rs",
        "src/std/src/sys/pal/sgx/mod.rs",
        "src/std/src/sys/pal/sgx/os.rs",
        "src/std/src/sys/pal/sgx/thread.rs",
        "src/std/src/sys/pal/sgx/thread_parking.rs",
        "src/std/src/sys/pal/sgx/time.rs",
        "src/std/src/sys/pal/sgx/waitqueue/mod.rs",
        "src/std/src/sys/pal/sgx/waitqueue/spin_mutex.rs",
        "src/std/src/sys/pal/sgx/waitqueue/spin_mutex/tests.rs",
        "src/std/src/sys/pal/sgx/waitqueue/tests.rs",
        "src/std/src/sys/pal/sgx/waitqueue/unsafe_list.rs",
        "src/std/src/sys/pal/sgx/waitqueue/unsafe_list/tests.rs",
        "src/std/src/sys/pal/solid/abi/fs.rs",
        "src/std/src/sys/pal/solid/abi/mod.rs",
        "src/std/src/sys/pal/solid/abi/sockets.rs",
        "src/std/src/sys/pal/solid/env.rs",
        "src/std/src/sys/pal/solid/error.rs",
        "src/std/src/sys/pal/solid/mod.rs",
        "src/std/src/sys/pal/solid/os.rs",
        "src/std/src/sys/pal/solid/time.rs",
        "src/std/src/sys/pal/teeos/mod.rs",
        "src/std/src/sys/pal/teeos/os.rs",
        "src/std/src/sys/pal/teeos/thread.rs",
        "src/std/src/sys/pal/trusty/mod.rs",
        "src/std/src/sys/pal/uefi/env.rs",
        "src/std/src/sys/pal/uefi/helpers.rs",
        "src/std/src/sys/pal/uefi/mod.rs",
        "src/std/src/sys/pal/uefi/os.rs",
        "src/std/src/sys/pal/uefi/tests.rs",
        "src/std/src/sys/pal/uefi/thread.rs",
        "src/std/src/sys/pal/uefi/time.rs",
        "src/std/src/sys/pal/unix/env.rs",
        "src/std/src/sys/pal/unix/fuchsia.rs",
        "src/std/src/sys/pal/unix/futex.rs",
        "src/std/src/sys/pal/unix/kernel_copy.rs",
        "src/std/src/sys/pal/unix/kernel_copy/tests.rs",
        "src/std/src/sys/pal/unix/linux/mod.rs",
        "src/std/src/sys/pal/unix/linux/pidfd.rs",
        "src/std/src/sys/pal/unix/linux/pidfd/tests.rs",
        "src/std/src/sys/pal/unix/mod.rs",
        "src/std/src/sys/pal/unix/os.rs",
        "src/std/src/sys/pal/unix/os/tests.rs",
        "src/std/src/sys/pal/unix/pipe.rs",
        "src/std/src/sys/pal/unix/stack_overflow.rs",
        "src/std/src/sys/pal/unix/sync/condvar.rs",
        "src/std/src/sys/pal/unix/sync/mod.rs",
        "src/std/src/sys/pal/unix/sync/mutex.rs",
        "src/std/src/sys/pal/unix/thread.rs",
        "src/std/src/sys/pal/unix/thread_parking.rs",
        "src/std/src/sys/pal/unix/time.rs",
        "src/std/src/sys/pal/unix/weak.rs",
        "src/std/src/sys/pal/unsupported/common.rs",
        "src/std/src/sys/pal/unsupported/env.rs",
        "src/std/src/sys/pal/unsupported/mod.rs",
        "src/std/src/sys/pal/unsupported/os.rs",
        "src/std/src/sys/pal/unsupported/pipe.rs",
        "src/std/src/sys/pal/unsupported/thread.rs",
        "src/std/src/sys/pal/unsupported/time.rs",
        "src/std/src/sys/pal/wasi/env.rs",
        "src/std/src/sys/pal/wasi/helpers.rs",
        "src/std/src/sys/pal/wasi/mod.rs",
        "src/std/src/sys/pal/wasi/os.rs",
        "src/std/src/sys/pal/wasi/thread.rs",
        "src/std/src/sys/pal/wasi/time.rs",
        "src/std/src/sys/pal/wasip2/cabi_realloc.rs",
        "src/std/src/sys/pal/wasip2/mod.rs",
        "src/std/src/sys/pal/wasm/atomics/futex.rs",
        "src/std/src/sys/pal/wasm/atomics/thread.rs",
        "src/std/src/sys/pal/wasm/env.rs",
        "src/std/src/sys/pal/wasm/mod.rs",
        "src/std/src/sys/pal/windows/api.rs",
        "src/std/src/sys/pal/windows/api/tests.rs",
        "src/std/src/sys/pal/windows/c.rs",
        "src/std/src/sys/pal/windows/c/windows_sys.rs",
        "src/std/src/sys/pal/windows/compat.rs",
        "src/std/src/sys/pal/windows/env.rs",
        "src/std/src/sys/pal/windows/futex.rs",
        "src/std/src/sys/pal/windows/handle.rs",
        "src/std/src/sys/pal/windows/handle/tests.rs",
        "src/std/src/sys/pal/windows/mod.rs",
        "src/std/src/sys/pal/windows/os.rs",
        "src/std/src/sys/pal/windows/os/tests.rs",
        "src/std/src/sys/pal/windows/pipe.rs",
        "src/std/src/sys/pal/windows/stack_overflow.rs",
        "src/std/src/sys/pal/windows/stack_overflow_uwp.rs",
        "src/std/src/sys/pal/windows/thread.rs",
        "src/std/src/sys/pal/windows/time.rs",
        "src/std/src/sys/pal/xous/mod.rs",
        "src/std/src/sys/pal/xous/os.rs",
        "src/std/src/sys/pal/xous/os/params.rs",
        "src/std/src/sys/pal/xous/os/params/tests.rs",
        "src/std/src/sys/pal/xous/thread.rs",
        "src/std/src/sys/pal/xous/time.rs",
        "src/std/src/sys/pal/zkvm/abi.rs",
        "src/std/src/sys/pal/zkvm/env.rs",
        "src/std/src/sys/pal/zkvm/mod.rs",
        "src/std/src/sys/pal/zkvm/os.rs",
        "src/std/src/sys/path/mod.rs",
        "src/std/src/sys/path/sgx.rs",
        "src/std/src/sys/path/uefi.rs",
        "src/std/src/sys/path/unix.rs",
        "src/std/src/sys/path/unsupported_backslash.rs",
        "src/std/src/sys/path/windows.rs",
        "src/std/src/sys/path/windows/tests.rs",
        "src/std/src/sys/personality/dwarf/eh.rs",
        "src/std/src/sys/personality/dwarf/mod.rs",
        "src/std/src/sys/personality/dwarf/tests.rs",
        "src/std/src/sys/personality/emcc.rs",
        "src/std/src/sys/personality/gcc.rs",
        "src/std/src/sys/personality/mod.rs",
        "src/std/src/sys/process/mod.rs",
        "src/std/src/sys/process/uefi.rs",
        "src/std/src/sys/process/unix/common.rs",
        "src/std/src/sys/process/unix/common/tests.rs",
        "src/std/src/sys/process/unix/fuchsia.rs",
        "src/std/src/sys/process/unix/mod.rs",
        "src/std/src/sys/process/unix/unix.rs",
        "src/std/src/sys/process/unix/unix/tests.rs",
        "src/std/src/sys/process/unix/unsupported.rs",
        "src/std/src/sys/process/unix/unsupported/wait_status.rs",
        "src/std/src/sys/process/unix/unsupported/wait_status/tests.rs",
        "src/std/src/sys/process/unix/vxworks.rs",
        "src/std/src/sys/process/unsupported.rs",
        "src/std/src/sys/process/windows.rs",
        "src/std/src/sys/process/windows/tests.rs",
        "src/std/src/sys/random/apple.rs",
        "src/std/src/sys/random/arc4random.rs",
        "src/std/src/sys/random/espidf.rs",
        "src/std/src/sys/random/fuchsia.rs",
        "src/std/src/sys/random/getentropy.rs",
        "src/std/src/sys/random/getrandom.rs",
        "src/std/src/sys/random/hermit.rs",
        "src/std/src/sys/random/linux.rs",
        "src/std/src/sys/random/mod.rs",
        "src/std/src/sys/random/redox.rs",
        "src/std/src/sys/random/sgx.rs",
        "src/std/src/sys/random/solid.rs",
        "src/std/src/sys/random/teeos.rs",
        "src/std/src/sys/random/trusty.rs",
        "src/std/src/sys/random/uefi.rs",
        "src/std/src/sys/random/unix_legacy.rs",
        "src/std/src/sys/random/unsupported.rs",
        "src/std/src/sys/random/vxworks.rs",
        "src/std/src/sys/random/wasi.rs",
        "src/std/src/sys/random/windows.rs",
        "src/std/src/sys/random/zkvm.rs",
        "src/std/src/sys/stdio/mod.rs",
        "src/std/src/sys/stdio/sgx.rs",
        "src/std/src/sys/stdio/solid.rs",
        "src/std/src/sys/stdio/teeos.rs",
        "src/std/src/sys/stdio/trusty.rs",
        "src/std/src/sys/stdio/uefi.rs",
        "src/std/src/sys/stdio/unix.rs",
        "src/std/src/sys/stdio/unsupported.rs",
        "src/std/src/sys/stdio/wasi.rs",
        "src/std/src/sys/stdio/windows.rs",
        "src/std/src/sys/stdio/windows/tests.rs",
        "src/std/src/sys/stdio/xous.rs",
        "src/std/src/sys/stdio/zkvm.rs",
        "src/std/src/sys/sync/condvar/futex.rs",
        "src/std/src/sys/sync/condvar/itron.rs",
        "src/std/src/sys/sync/condvar/mod.rs",
        "src/std/src/sys/sync/condvar/no_threads.rs",
        "src/std/src/sys/sync/condvar/pthread.rs",
        "src/std/src/sys/sync/condvar/sgx.rs",
        "src/std/src/sys/sync/condvar/windows7.rs",
        "src/std/src/sys/sync/condvar/xous.rs",
        "src/std/src/sys/sync/mod.rs",
        "src/std/src/sys/sync/mutex/fuchsia.rs",
        "src/std/src/sys/sync/mutex/futex.rs",
        "src/std/src/sys/sync/mutex/itron.rs",
        "src/std/src/sys/sync/mutex/mod.rs",
        "src/std/src/sys/sync/mutex/no_threads.rs",
        "src/std/src/sys/sync/mutex/pthread.rs",
        "src/std/src/sys/sync/mutex/sgx.rs",
        "src/std/src/sys/sync/mutex/windows7.rs",
        "src/std/src/sys/sync/mutex/xous.rs",
        "src/std/src/sys/sync/once/futex.rs",
        "src/std/src/sys/sync/once/mod.rs",
        "src/std/src/sys/sync/once/no_threads.rs",
        "src/std/src/sys/sync/once/queue.rs",
        "src/std/src/sys/sync/once_box.rs",
        "src/std/src/sys/sync/rwlock/futex.rs",
        "src/std/src/sys/sync/rwlock/mod.rs",
        "src/std/src/sys/sync/rwlock/no_threads.rs",
        "src/std/src/sys/sync/rwlock/queue.rs",
        "src/std/src/sys/sync/rwlock/solid.rs",
        "src/std/src/sys/sync/rwlock/teeos.rs",
        "src/std/src/sys/sync/thread_parking/darwin.rs",
        "src/std/src/sys/sync/thread_parking/futex.rs",
        "src/std/src/sys/sync/thread_parking/id.rs",
        "src/std/src/sys/sync/thread_parking/mod.rs",
        "src/std/src/sys/sync/thread_parking/pthread.rs",
        "src/std/src/sys/sync/thread_parking/unsupported.rs",
        "src/std/src/sys/sync/thread_parking/windows7.rs",
        "src/std/src/sys/sync/thread_parking/xous.rs",
        "src/std/src/sys/thread_local/destructors/linux_like.rs",
        "src/std/src/sys/thread_local/destructors/list.rs",
        "src/std/src/sys/thread_local/guard/apple.rs",
        "src/std/src/sys/thread_local/guard/key.rs",
        "src/std/src/sys/thread_local/guard/solid.rs",
        "src/std/src/sys/thread_local/guard/windows.rs",
        "src/std/src/sys/thread_local/key/racy.rs",
        "src/std/src/sys/thread_local/key/sgx.rs",
        "src/std/src/sys/thread_local/key/tests.rs",
        "src/std/src/sys/thread_local/key/unix.rs",
        "src/std/src/sys/thread_local/key/windows.rs",
        "src/std/src/sys/thread_local/key/xous.rs",
        "src/std/src/sys/thread_local/mod.rs",
        "src/std/src/sys/thread_local/native/eager.rs",
        "src/std/src/sys/thread_local/native/lazy.rs",
        "src/std/src/sys/thread_local/native/mod.rs",
        "src/std/src/sys/thread_local/no_threads.rs",
        "src/std/src/sys/thread_local/os.rs",
        "src/std/src/sys_common/mod.rs",
        "src/std/src/sys_common/process.rs",
        "src/std/src/sys_common/tests.rs",
        "src/std/src/sys_common/wstr.rs",
        "src/std/src/sys_common/wtf8.rs",
        "src/std/src/sys_common/wtf8/tests.rs",
        "src/std/src/test_helpers.rs",
        "src/std/src/thread/current.rs",
        "src/std/src/thread/local.rs",
        "src/std/src/thread/mod.rs",
        "src/std/src/thread/scoped.rs",
        "src/std/src/thread/spawnhook.rs",
        "src/std/src/thread/tests.rs",
        "src/std/src/time.rs",
        "src/stdarch/crates/core_arch/src/core_arch_docs.md",
    ],
    crate = "std",
    crate_root = "src/std/src/lib.rs",
    edition = "2024",
    env = {
        "STD_ENV_ARCH": "x86_64",
    },
    features = [
        "panic_unwind",
        "std_detect_dlsym_getauxval",
        "std_detect_file_io",
    ],
    platform = {
        "linux-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "linux-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "windows-gnu": dict(
            deps = [
                ":libc-0.2.171",
                ":windows-targets-0.0.0",
            ],
        ),
        "windows-msvc": dict(
            deps = [":windows-targets-0.0.0"],
        ),
    },
    rustc_flags = ["--cfg=backtrace_in_libstd"],
    visibility = [],
    deps = [
        ":alloc-0.0.0",
        ":cfg-if-1.0.0",
        ":compiler_builtins-0.1.153",
        ":core-0.0.0",
        ":hashbrown-0.15.2",
        ":panic_abort-0.0.0",
        ":panic_unwind-0.0.0",
        ":rustc-demangle-0.1.24",
        ":std_detect-0.1.5",
        ":unwind-0.0.0",
    ],
)

alias(
    name = "std_detect",
    actual = ":std_detect-0.1.5",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "std_detect-0.1.5",
    srcs = [
        "src/stdarch/crates/std_detect/src/detect/arch/aarch64.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/arm.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/loongarch.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/mips.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/mips64.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/mod.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/powerpc.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/powerpc64.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/riscv.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/s390x.rs",
        "src/stdarch/crates/std_detect/src/detect/arch/x86.rs",
        "src/stdarch/crates/std_detect/src/detect/bit.rs",
        "src/stdarch/crates/std_detect/src/detect/cache.rs",
        "src/stdarch/crates/std_detect/src/detect/macros.rs",
        "src/stdarch/crates/std_detect/src/detect/mod.rs",
        "src/stdarch/crates/std_detect/src/detect/os/aarch64.rs",
        "src/stdarch/crates/std_detect/src/detect/os/darwin/aarch64.rs",
        "src/stdarch/crates/std_detect/src/detect/os/freebsd/aarch64.rs",
        "src/stdarch/crates/std_detect/src/detect/os/freebsd/arm.rs",
        "src/stdarch/crates/std_detect/src/detect/os/freebsd/auxvec.rs",
        "src/stdarch/crates/std_detect/src/detect/os/freebsd/mod.rs",
        "src/stdarch/crates/std_detect/src/detect/os/freebsd/powerpc.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/aarch64.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/arm.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/auxvec.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/cpuinfo.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/loongarch.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/mips.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/mod.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/powerpc.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/riscv.rs",
        "src/stdarch/crates/std_detect/src/detect/os/linux/s390x.rs",
        "src/stdarch/crates/std_detect/src/detect/os/openbsd/aarch64.rs",
        "src/stdarch/crates/std_detect/src/detect/os/other.rs",
        "src/stdarch/crates/std_detect/src/detect/os/windows/aarch64.rs",
        "src/stdarch/crates/std_detect/src/detect/os/x86.rs",
        "src/stdarch/crates/std_detect/src/lib.rs",
    ],
    crate = "std_detect",
    crate_root = "src/stdarch/crates/std_detect/src/lib.rs",
    edition = "2024",
    features = [
        "alloc",
        "compiler_builtins",
        "core",
        "libc",
        "rustc-dep-of-std",
        "std_detect_dlsym_getauxval",
        "std_detect_file_io",
    ],
    named_deps = {
        "alloc": ":rustc-std-workspace-alloc-1.99.0",
        "core": ":rustc-std-workspace-core-1.99.0",
    },
    platform = {
        "linux-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "linux-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
    },
    visibility = [],
    deps = [
        ":cfg-if-1.0.0",
        ":compiler_builtins-0.1.153",
    ],
)

stdlib_rust_library(
    name = "sysroot-0.0.0",
    srcs = ["src/sysroot/src/lib.rs"],
    crate = "sysroot",
    crate_root = "src/sysroot/src/lib.rs",
    edition = "2024",
    features = [
        "default",
        "panic-unwind",
        "std_detect_dlsym_getauxval",
        "std_detect_file_io",
    ],
    visibility = [],
    deps = [
        ":proc_macro-0.0.0",
        ":std-0.0.0",
        ":test-0.0.0",
    ],
)

alias(
    name = "test",
    actual = ":test-0.0.0",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "test-0.0.0",
    srcs = [
        "src/test/src/bench.rs",
        "src/test/src/cli.rs",
        "src/test/src/console.rs",
        "src/test/src/event.rs",
        "src/test/src/formatters/json.rs",
        "src/test/src/formatters/junit.rs",
        "src/test/src/formatters/mod.rs",
        "src/test/src/formatters/pretty.rs",
        "src/test/src/formatters/terse.rs",
        "src/test/src/helpers/concurrency.rs",
        "src/test/src/helpers/metrics.rs",
        "src/test/src/helpers/mod.rs",
        "src/test/src/helpers/shuffle.rs",
        "src/test/src/lib.rs",
        "src/test/src/options.rs",
        "src/test/src/stats.rs",
        "src/test/src/stats/tests.rs",
        "src/test/src/term.rs",
        "src/test/src/term/terminfo/mod.rs",
        "src/test/src/term/terminfo/parm.rs",
        "src/test/src/term/terminfo/parm/tests.rs",
        "src/test/src/term/terminfo/parser/compiled.rs",
        "src/test/src/term/terminfo/parser/compiled/tests.rs",
        "src/test/src/term/terminfo/searcher.rs",
        "src/test/src/term/terminfo/searcher/tests.rs",
        "src/test/src/term/win.rs",
        "src/test/src/test_result.rs",
        "src/test/src/tests.rs",
        "src/test/src/time.rs",
        "src/test/src/types.rs",
    ],
    crate = "test",
    crate_root = "src/test/src/lib.rs",
    edition = "2024",
    platform = {
        "linux-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "linux-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "windows-gnu": dict(
            deps = [":libc-0.2.171"],
        ),
    },
    visibility = [],
    deps = [
        ":core-0.0.0",
        ":getopts-0.2.21",
        ":std-0.0.0",
    ],
)

http_archive(
    name = "unicode-width-0.1.14.crate",
    sha256 = "7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af",
    strip_prefix = "unicode-width-0.1.14",
    urls = ["https://static.crates.io/crates/unicode-width/0.1.14/download"],
    visibility = [],
)

stdlib_rust_library(
    name = "unicode-width-0.1.14",
    srcs = [":unicode-width-0.1.14.crate"],
    crate = "unicode_width",
    crate_root = "unicode-width-0.1.14.crate/src/lib.rs",
    edition = "2021",
    features = [
        "cjk",
        "compiler_builtins",
        "core",
        "default",
        "rustc-dep-of-std",
        "std",
    ],
    named_deps = {
        "core": ":rustc-std-workspace-core-1.99.0",
        "std": ":rustc-std-workspace-std-1.99.0",
    },
    visibility = [],
    deps = [":compiler_builtins-0.1.153"],
)

alias(
    name = "unwind",
    actual = ":unwind-0.0.0",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "unwind-0.0.0",
    srcs = [
        "src/unwind/src/lib.rs",
        "src/unwind/src/libunwind.rs",
        "src/unwind/src/unwinding.rs",
        "src/unwind/src/wasm.rs",
    ],
    crate = "unwind",
    crate_root = "src/unwind/src/lib.rs",
    edition = "2024",
    platform = {
        "linux-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "linux-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-arm64": dict(
            deps = [":libc-0.2.171"],
        ),
        "macos-x86_64": dict(
            deps = [":libc-0.2.171"],
        ),
        "windows-gnu": dict(
            deps = [":libc-0.2.171"],
        ),
    },
    visibility = [],
    deps = [
        ":cfg-if-1.0.0",
        ":compiler_builtins-0.1.153",
        ":core-0.0.0",
    ],
)

alias(
    name = "windows-targets",
    actual = ":windows-targets-0.0.0",
    visibility = ["PUBLIC"],
)

stdlib_rust_library(
    name = "windows-targets-0.0.0",
    srcs = ["src/windows_targets/src/lib.rs"],
    crate = "windows_targets",
    crate_root = "src/windows_targets/src/lib.rs",
    edition = "2024",
    visibility = [],
)
